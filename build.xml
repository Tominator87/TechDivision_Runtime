<?xml version="1.0"?>
<project name="TechDivision_Runtime" default="deploy" basedir=".">

    <property file="${basedir}/build.properties"/>
    <property file="${basedir}/build.default.properties"/>
    <property file="${basedir}/build.${os.family}.properties"/>
    <property environment="env" />
    <property name="namespace" value="ApplicationServer" />
    <property name="codepool" value="core"/>
    <property name="unique.name" value="${codepool}/${namespace}" />
    <property name="lib.dir" value="${basedir}/lib" />
    <property name="php-src.dir" value="${basedir}/src" />
    <property name="php-test.dir" value="${basedir}/tests" />
    <property name="php-target.dir" value="${basedir}/target"/>

    <!-- ==================================================================== -->
    <!-- Cleans the directories with the generated source files				  -->
    <!-- ==================================================================== -->
    <target name="clean" description="Cleans almost everything, so use carefully.">
        <delete dir="${php-target.dir}" includeemptydirs="true" quiet="false" verbose="true" failonerror="true"/>
    </target>

    <!-- ==================================================================== -->
    <!-- Prepares all the required directories								  -->
    <!-- ==================================================================== -->
    <target name="prepare" depends="clean" description="Prepares all the required directories.">
        <mkdir dir="${php-target.dir}" />
        <mkdir dir="${lib.dir}" />
    </target>

    <!-- ==================================================================== -->
    <!-- Copies the sources to the target directory							  -->
    <!-- ==================================================================== -->
    <target name="copy" depends="prepare" description="Copies the sources to the target directory.">
        <copy todir="${php-target.dir}" preservelastmodified="true" overwrite="true">
            <fileset dir="${php-src.dir}">
                <include name="**/*" />
            </fileset>
        </copy>
    </target>
    <!-- ==================================================================== -->
    <!-- Copies the sources to the deploy directory     					  -->
    <!-- ==================================================================== -->
    <target name="deploy" depends="copy" description="Copies the sources to the deploy directory.">
        <copy todir="${dir.www}/${deploy.dir}" preservelastmodified="true" overwrite="true">
            <fileset dir="${php-target.dir}">
                <include name="**/*"/>
            </fileset>
        </copy>
    </target>

    <!-- ==================================================================== -->
    <!-- Generates the API documentation                                      -->
    <!-- ==================================================================== -->
    <target name="apidoc" description="Generates the API documentation.">
        <exec executable="phpdoc">
            <arg line="-ct type -ue on -s on -t ${php-target.dir}/docs -o HTML:frames:earthli -d ${php-src.dir}/app/code/core"/>
        </exec>
    </target>

    <!-- ==================================================================== -->
    <!-- Runs the code sniffer and generates a report                         -->
    <!-- ==================================================================== -->
    <target name="phpcs" depends="apidoc" description="Runs the code sniffer and generates a report.">
        <exec executable="phpcs" output="${php-target.dir}/reports/checkstyle.xml">
            <arg line="--standard=ZEND --report=checkstyle ${php-src.dir}"/>
        </exec>
    </target>

    <!-- ==================================================================== -->
    <!-- Runs the copy and paste detection                                    -->
    <!-- ==================================================================== -->
    <target name="phpcpd" depends="phpcs" description="Runs the copy and paste detection.">
        <exec executable="phpcpd">
            <arg line="--log-pmd ${php-target.dir}/reports/pmd-cpd.xml ${php-src.dir}"/>
        </exec>
    </target>

    <!-- ==================================================================== -->
    <!-- Generate phploc.csv                                                  -->
    <!-- ==================================================================== -->
    <target name="phploc" depends="phpcpd" description="Generate phploc.csv">
        <exec executable="phploc">
            <arg line="--log-xml ${php-target.dir}/reports/phploc.xml ${php-src.dir}"/>
        </exec>
    </target>

    <!-- ==================================================================== -->
    <!-- Runs the PHPDepend tool and generats a graphs                        -->
    <!-- ==================================================================== -->
    <target name="pdepend" depends="phploc" description="Runs the PHPDepend tool and generats a graphs.">
        <exec executable="pdepend">
            <arg line="--summary-xml=${php-target.dir}/reports/pdepend.xml --jdepend-xml=${php-target.dir}/reports/jdepend.xml --jdepend-chart=${php-target.dir}/reports/jdepend.svg --overview-pyramid=${php-target.dir}/reports/pdepend-pyramid.svg ${php-src.dir}" />
        </exec>
    </target>

    <!-- ==================================================================== -->
    <!-- Runs the PHP mess detector tool                                      -->
    <!-- ==================================================================== -->
    <target name="phpmd" depends="pdepend" description="Runs the PHP Mess detector tool.">
        <exec executable="phpmd">
            <arg line="${php-src.dir} xml codesize,unusedcode --reportfile ${php-target.dir}/reports/pmd.xml" />
        </exec>
    </target>

    <!-- ==================================================================== -->
    <!-- Copies the test sources to the target directory					  -->
    <!-- ==================================================================== -->
    <target name="copy-tests" depends="copy" description="Copies the test sources to the target directory.">
        <copy todir="${php-target.dir}">
            <fileset dir="${php-test.dir}">
                <include name="**/*" />
            </fileset>
            <filterchain>
                <expandproperties/>
            </filterchain>
        </copy>
    </target>

    <!-- ==================================================================== -->
    <!-- Runs the PHPUnit tests and generates a report                        -->
    <!-- ==================================================================== -->
    <target name="run-tests" depends="copy-tests" description="Runs the PHPUnit tests and generates a report.">
        <exec executable="phpunit" dir="${php-target.dir}">
            <arg line="--bootstrap bootstrap.php --configuration phpunit.xml.dist" />
        </exec>
    </target>

    <!-- ==================================================================== -->
    <!-- Runs the PHPUnit tests and generates a report						  -->
    <!-- ==================================================================== -->
    <target name="build" description="Runs the PHPUnit tests and generates a report.">
        <antcall target="phpmd"/>
        <antcall target="run-tests"/>
    </target>

    <!-- ==================================================================== -->
    <!-- Check if PHP source package has been downloaded yet  		 	      -->
    <!-- ==================================================================== -->
    <target name="check-php-src-present" description="Check if PHP Source Package has been downloaded yet.">
        <available file="${lib.dir}/php-${appserver.php.version}.tar.gz" property="php-src.present"/>
    </target>

    <!-- ==================================================================== -->
    <!-- Get PHP source package by given version number		  		          -->
    <!-- ==================================================================== -->
    <target name="get-php-src" depends="check-php-src-present" unless="php-src.present">
        <get src="https://github.com/php/php-src/archive/php-${appserver.php.version}.tar.gz" dest="${lib.dir}/php-${appserver.php.version}.tar.gz"/>
    </target>

    <!-- ==================================================================== -->
    <!-- Prepares the PHP sources for the runtime                             -->
    <!-- ==================================================================== -->
    <target name="prepare-source" depends="prepare" description="Prepares the PHP sources for the runtime.">
        <antcall target="get-php-src"/>
        <untar src="${lib.dir}/php-${appserver.php.version}.tar.gz" dest="${php-target.dir}" compression="gzip"/>
        <chmod perm="755" dir="${php-target.dir}/php-src-php-${appserver.php.version}/build" includes="**/*"/>
    </target>

    <target name="prepare-libjpeg">
        <untar src="${lib.dir}/jpegsrc.v9.tar.gz" dest="${php-target.dir}" compression="gzip"/>
        <exec dir="${php-target.dir}/jpeg-9" executable="sh">
            <env key="CC" value="gcc -arch x86_64"/>
            <arg value="configure"/>
            <arg value="--prefix=${appserver.compile.prefix}"/>
        </exec>
        <chmod perm="755" dir="${php-target.dir}/jpeg-9" includes="install-sh"/>
        <exec dir="${php-target.dir}/jpeg-9" executable="make"/>
        <exec dir="${php-target.dir}/jpeg-9" executable="make">
            <arg value="DESTDIR=${php-target.dir}/re"/>
            <arg value="install"/>
        </exec>
    </target>

    <target name="prepare-libpng">
        <untar src="${lib.dir}/libpng-1.6.2.tar.gz" dest="${php-target.dir}" compression="gzip"/>
        <exec dir="${php-target.dir}/libpng-1.6.2" executable="sh">
            <env key="CC" value="gcc -arch x86_64"/>
            <arg value="configure"/>
            <arg value="--prefix=${appserver.compile.prefix}"/>
        </exec>
        <chmod perm="755" dir="${php-target.dir}/libpng-1.6.2" includes="install-sh"/>
        <exec dir="${php-target.dir}/libpng-1.6.2" executable="make"/>
        <exec dir="${php-target.dir}/libpng-1.6.2" executable="make">
            <arg value="DESTDIR=${php-target.dir}/re"/>
            <arg value="install"/>
        </exec>
    </target>

    <target name="prepare-freetype">
        <untar src="${lib.dir}/freetype-2.5.0.tar.gz" dest="${php-target.dir}" compression="gzip"/>
        <exec dir="${php-target.dir}/freetype-2.5.0" executable="sh">
            <env key="CC" value="gcc -arch x86_64"/>
            <arg value="configure"/>
            <arg value="--prefix=${appserver.compile.prefix}"/>
        </exec>
        <chmod perm="755" dir="${php-target.dir}/freetype-2.5.0/builds" includes="**/*"/>
        <exec dir="${php-target.dir}/freetype-2.5.0" executable="make"/>
        <exec dir="${php-target.dir}/freetype-2.5.0" executable="make">
            <arg value="DESTDIR=${php-target.dir}/re"/>
            <arg value="install"/>
        </exec>
    </target>

    <!-- ==================================================================== -->
    <!-- Copies the PHP Application Server runtime sources                    -->
    <!-- ==================================================================== -->
    <target name="prepare-runtime" description="Copies the PHP Application Server runtime sources.">

        <antcall target="prepare-source"/>
        <antcall target="prepare-libjpeg"/>
        <antcall target="prepare-libpng"/>
        <antcall target="prepare-freetype"/>

        <copy todir="${php-target.dir}/re${appserver.compile.prefix}">
            <fileset dir="${php-src.dir}">
                <include name="**/*"/>
            </fileset>
        </copy>
    </target>

    <!-- ==================================================================== -->
    <!-- Builds the PHP source for the PHP Application Server runtime         -->
    <!-- ==================================================================== -->
    <target name="build-runtime" depends="prepare-runtime" description="Compiles the ApplicationServer runtime environment.">
        <exec dir="${php-target.dir}/php-src-php-${appserver.php.version}" executable="sh">
            <arg value="buildconf"/>
            <arg line="--force"/>
        </exec>
        <exec dir="${php-target.dir}/php-src-php-${appserver.php.version}" executable="sh">
            <arg value="configure"/>
            <arg value="--prefix=${appserver.compile.prefix}"/>
            <arg value="--with-libdir=${appserver.compile.libdir}"/>
            <arg value="--with-config-file-path=${appserver.compile.prefix}/etc"/>
            <arg value="--with-config-file-scan-dir=${appserver.compile.prefix}/etc/conf.d"/>
            <arg value="--enable-libxml"/>
            <arg value="--enable-session"/>
            <arg value="--with-pcre-regex"/>
            <arg value="--enable-xml"/>
            <arg value="--enable-simplexml"/>
            <arg value="--enable-filter"/>
            <arg value="--disable-debug"/>
            <arg value="--enable-inline-optimization"/>
            <arg value="--disable-rpath"/>
            <arg value="--disable-shared"/>
            <arg value="--enable-static"/>
            <arg value="--with-pic"/>
            <arg value="--with-gnu-ld"/>
            <arg value="--with-mysql"/>
            <arg value="--with-gd"/>
            <arg value="--with-jpeg-dir"/>
            <arg value="--with-png-dir"/>
            <arg value="--enable-exif"/>
            <arg value="--with-zlib"/>
            <arg value="--with-bz2"/>
            <arg value="--with-curl"/>
            <arg value="--with-mysqli"/>
            <arg value="--with-freetype-dir"/>
            <arg value="--enable-sockets"/>
            <arg value="--enable-mbstring"/>
            <arg value="--enable-gd-native-ttf"/>
            <arg value="--enable-bcmath"/>
            <arg value="--enable-zip"/>
            <arg value="--with-pear=${appserver.compile.prefix}/app/code/lib"/>
            <arg value="--with-openssl"/>
            <arg value="--enable-phar"/>
            <arg value="--enable-pdo"/>
            <arg value="--with-pdo-mysql"/>
            <arg value="--with-mysqli"/>
            <arg value="--enable-roxen-zts"/>
            <arg value="--with-mcrypt"/>
            <arg value="--enable-pcntl"/>
            <arg value="--with-tsrm-pthreads"/>
            <arg value="--enable-maintainer-zts"/>
        </exec>
        <exec dir="${php-target.dir}/php-src-php-${appserver.php.version}" executable="make"/>
        <exec dir="${php-target.dir}/php-src-php-${appserver.php.version}" executable="make">
            <env key="INSTALL_ROOT" value="${php-target.dir}/re"/>
            <arg value="install"/>
        </exec>
    </target>

    <!-- ==================================================================== -->
    <!-- Creates a DEBIAN package with the local ApplicationServer runtime    -->
    <!-- ==================================================================== -->
    <target name="DEBIAN-build-package" depends="build-runtime" description="Creates a DEBIAN package with the local ApplicationServer runtime.">
        <copy todir="${php-target.dir}/re">
            <fileset dir="${basedir}/buildfiles/debian">
                <include name="**/*"/>
            </fileset>
            <filterchain>
                <expandproperties/>
            </filterchain>
        </copy>
        <chmod perm="755" file="${php-target.dir}/re/DEBIAN/postinst" />
        <exec dir="${php-target.dir}" executable="dpkg-deb">
            <arg line="--build ${php-target.dir}/re appserver-${appserver.version}_${appserver.architecture}.deb"/>
        </exec>
    </target>

    <!-- ==================================================================== -->
    <!-- Creates a .pkg package with the local ApplicationServer runtime      -->
    <!-- ==================================================================== -->
    <target name="create-pkg" depends="build-runtime" description="Creates a .pkg package with the local ApplicationServer runtime.">
        <exec dir="${basedir}" executable="pkgbuild">
            <arg value="--root"/>
            <arg value="${php-target.dir}/re/opt"/>
            <arg value="--scripts"/>
            <arg value="${basedir}/buildfiles/macosx/scripts"/>
            <arg value="--install-location"/>
            <arg value="/opt"/>
            <arg value="--version"/>
            <arg value="${appserver.version}"/>
            <arg value="--identifier"/>
            <arg value="com.techdivision.appserver"/>
            <arg value="${php-target.dir}/ApplicationServer-${appserver.version}.pkg"/>
        </exec>
    </target>

</project>